{
    "al": "( iscega * alis + ( glsu - iscega ) * algav ) / glsu",
    "cac": "dacco2 * cccst",
    "ch4a": "integ( ch4a, ch4e -ch4bd, dt, 0 )",
    "ch4bd": "ch4a / lch4a",
    "ch4ca": "ch4a / gch4pp",
    "ch4e": "mmch4e + nch4e",
    "ch4fpp": "with_lookup( time, ([(1980,0), (2100,2)],(1980,0.82),(2000,0.94),(2020,1.01),(2100,1.1) ))",
    "co2a": "integ( co2a, co2e+co2fch4 -co2ab+co2fch4, dt, 0 )",
    "co2ab": "( co2a - co2a1850 ) / leco2a",
    "co2ca": "co2a / gco2pp",
    "co2e": "co2ei + co2eluluc - dacco2",
    "co2fch4": "ch4bd * tco2ptch4",
    "co2fpp": "with_lookup( time, ([(1980,0), (2100,0.01)],(1980,0.0032),(1990,0.0041),(2000,0.0046),(2020,0.0051),(2100,0.006) ))",
    "co2gdp": "( co2e / gdp ) * 1000",
    "dacco2": "if_then_else(time>2022, ramp( time, ( (dacco22100 ) / ipp ), ( 2022 ), ( 2022 + ipp )) , 0 )",
    "ecim": "mrdi * ai1980 * tpm3i * hrmi",
    "ehs": "integ( ehs, ewff -ecim -hdo -hts, dt, 0 )",
    "ewff": "( tmmf * glsu)   * 31.5 / 1000",
    "fch4": "ch4ca * ch4fpp",
    "fco2": "co2ca * co2fpp",
    "fn2o": "n2oca * n2ofpp",
    "fog": "with_lookup( time, ([(1980,0), (2100,1)],(1980,0.18),(2000,0.36),(2020,0.39),(2050,0.37),(2100,0) ))",
    "ghge": "co2e * tco2etco2 + ch4e * tco2etch4 + n2oe * tco2etn2o",
    "hdo": "ehs * trhga",
    "hts": "ehs * trhgs",
    "isc": "iscega * 100",
    "iscega": "integ( iscega,  -mel, dt, 0 )",
    "kch4ekc": "kch4kc1980 * exp( - (rdch4kc) * ( time - 1980))  *if_then_else(time>2022, exp( - (erdch4kc2022) * ( time - 2022)), 1)",
    "kn2oekf": "kn2okf1980 * exp( - (rdn2okf) * ( time - 1980))  *if_then_else(time>2022, exp( - (0.01) * ( time - 2022)), 1)",
    "leco2a": "leco2a1980 * owlco2",
    "mel": "iscega * mrs",
    "mmch4e": "(crsu * kch4ekc ) / 1000",
    "mmf": "fco2 + fch4 + fn2o + fog",
    "mmn2oe": "feus * kn2oekf / 1000",
    "mrdi": "mrs / svdr",
    "mrs": "mrs1980 * ( ow / wa1980 )",
    "n2oa": "integ( n2oa, n2oe - n2obd, dt, 0 )",
    "n2obd": "n2oa / ln2oa",
    "n2oca": "n2oa / gn2opp",
    "n2oe": "nn2oe + mmn2oe",
    "n2ofpp": "with_lookup( time, ([(1980,0), (2100,2)],(1980,0.43),(2000,0.64),(2010,0.73),(2020,0.8),(2100,1) ))",
    "nch4e": "with_lookup( time, ([(1980,0), (2100,1)],(1980,0.19),(2020,0.19),(2100,0.19) ))",
    "nn2oe": "with_lookup( time, ([(1980,0), (2100,0.01)],(1980,0.009),(2020,0.009),(2099.27,0) ))",
    "ow": "wa1980 + ( ehs - eh1980 ) *wfeh",
    "owlco2": "if_then_else(time>2022, 1 + sowlco2 * ( ow / ow2022 - 1 ), 1)",
    "pwa": "smooth( pwa, ow, pd, dt )",
    "rehe": "with_lookup( ow, ([(0,0), (6,40)],(0,1),(1.2,4.8),(2,8.6),(2.9,14),(5.2,40) ))",
    "tmmf": "mmf + wvf",
    "trhga": "trsa1980 * (( ow + 287 ) / 287 )",
    "trhgs": "( trss1980 * (( ow + 297 ) / 297 )) * ( al / al_1980 )",
    "wvc": "wvc1980 * ( 1 + owwv * ( ow / wa1980 - 1 ))",
    "wvf": "wvf1980 * ( 1 + wvwvf * ( wvc / wvc1980 - 1 ))",
    "bcil": "cfwb + cfgb",
    "bcisni": "bcil / ni",
    "bitro": "min(1, itro1980 + ramp( time, ( ( itro2022 - itro1980 ) / 42 ), ( 1980 ), ( 2022 )) + ramp( time, ( ( gitro - itro2022 ) / 78 ), ( 2022 ), ( 2100 )) )",
    "cancd": "pulse( time, 2022, 1) * gd * fgdc2022",
    "cd": "wcd - stw + oc - sto",
    "cfgb": "gic + gp - gnd",
    "cfwb": "wic + wp - wnd",
    "cpp": "cd / pop",
    "csgdp": "cd / ni",
    "egtf2022": "if_then_else(time>2022, egtrf2022 + eetf2022 + eptf2022, 0) * ni",
    "etf2022": "smooth( etf2022, getf2022, tint, dt )",
    "ettaf2022": "if_then_else(time>2022, ectaf2022 * fetacpet, 0 )",
    "fgbw": "smooth( fgbw, gfgbw, tint, dt )",
    "gcin": "gni - cfgb",
    "gd": "integ( gd, gnd -cancd -gp, dt, 0 )",
    "gdb": "gd / ni",
    "getf2022": "egtf2022 + ettaf2022",
    "gfgbw": "ft1980 +if_then_else(time>2022, etgbw, 0)",
    "gfsni": "( gic + gp ) / ni",
    "ggi": "wt + ot + stw + sto + ic2022",
    "ggis": "ggi / ni",
    "gic": "gd * gbc",
    "gipc": "pgcin - gpu",
    "gnd": "max(0, ( mgd - gd ) / gddp) + step( time, gsf2022, 2022 ) * ni",
    "gni": "ggi - t_pay + st",
    "gnisni": "gni / ni",
    "gp": "gd / gpp",
    "gpu": "pgcin * gcf",
    "gs": "gpu + gipc",
    "gsgdp": "gs / ni",
    "ic2022": "ni *if_then_else(time>2022, ramp( time, ( geic / ipp ), ( 2022 ), ( 2020 + ipp )) , 0)",
    "ineq": "ooiat / wiat",
    "ineqi": "ineq / ineq1980",
    "ito": "bitro * ni * ( 1 - wso)",
    "itw": "bitrw * ni * wso",
    "mgd": "ni * mgdb",
    "mwd": "wi * mwdb",
    "oc": "poci * ocf",
    "ocf": "1 - osf",
    "ocin": "ooiat",
    "oi": "ni * ( 1 - wso)",
    "ooiat": "oi - ot",
    "os": "poci - oc",
    "osf": "osf1980 * ( 1 + gdposr * ( egdpp / gdpp1980 - 1 ))",
    "ot": "ito + etf2022 * fetpo",
    "otr": "ot / oi",
    "pgcin": "smoothi( pgcin, gcin, tab, gci_in_1980, dt )",
    "poci": "smoothi( poci, ocin, taoc, oci_in_1980, dt )",
    "pwcin": "smoothi( pwcin, wcin, tawc, wfi_in_1980, dt )",
    "ssgdp": "ts / ni",
    "st": "stw + sto",
    "sto": "oc * sales_tax_r",
    "stw": "wcd * sales_tax_r",
    "t_pay": "ggi * fgbw",
    "tpp": "wcin + gcin + ocin - st",
    "ts": "os + ws",
    "wcd": "pwcin * wcf",
    "wcin": "wiat - cfwb",
    "wd": "integ( wd, wnd -wp, dt, 0 )",
    "wdb": "wd / wiat",
    "wdi": "pwcin / wf",
    "wfcsi": "cfwb / wiat",
    "wi": "ni * wso",
    "wiat": "wi - wt + t_pay",
    "wic": "wd * wbc",
    "wnd": "max(0, ( mwd - wd ) / wdp)",
    "wp": "wd / wpp",
    "ws": "pwcin - wcd",
    "wt": "itw + etf2022 * ( 1 - fetpo )",
    "wtr": "wt / wi",
    "acswcf": "integ( acswcf, aswc, dt, 0 )",
    "afec": "max(0, dfecc)",
    "arec": "max(0, ( drecc / rect )+ ( direc ))",
    "aswc": "arec",
    "capexfeg": "capexfed * afec",
    "capexred": "capexre1980 * ciswc",
    "capexreg": "capexred * arec",
    "cccsg": "iccsc * cccst",
    "ce": "cfffneu + cel + cg + cne + cccsg + cac",
    "cel": "cfe + cre + cnel",
    "cesgdp": "ce / gdp",
    "cfe": "capexfeg + opexfeg",
    "cfffneu": "(dfffneu * tcfffneu ) /1000",
    "cg": "ep * tc",
    "ciswc": "( 1 - crdswc )^ndswc",
    "cne": "( ecruneff / 1000 ) * erdnefffne",
    "cnel": "nep * cned",
    "co2ei": "co2ep + co2nfip",
    "co2empp": "( co2ei / pop ) * 1000",
    "co2ep": "uff * ( tco2pt / 1000 ) * ( 1 - fco2sccs )",
    "co2nfip": "( nfco2pp / 1000 ) * pop * ( 1 - fco2sccs)",
    "cre": "capexreg + opexreg",
    "de": "debne + eidefne",
    "debne": "( pop * tppuebee * exp( - niee * ( time - 1980))) / eepi2022",
    "dfe": "max(0, de - lcep)",
    "dfec": "dfe / ekhpy",
    "dfecc": "( dfec - fec ) / fecct + difec",
    "dfffneu": "dffneubne - erdnefffne",
    "dffneubne": "( pop * tppuffneubee * exp( - niee * ( time - 1980 ))) / eepi2022",
    "difec": "fec / lfec",
    "direc": "rec / lrec",
    "drec": "dsre / rcut",
    "drecc": "drec - rec",
    "dres": "reff1980 + ramp( time, ( ( reff2022 - reff1980 ) / 42 ), ( 1980 ), ( 2022 )) + ramp( time, ( ( gref - reff2022 ) / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "dsre": "de * dres",
    "ecetsgdp": "if_then_else(time>2022, ( ce - tcen ) / gdp, 0)",
    "eepi2022": "integ( eepi2022, ieepi, dt, 0 )",
    "eidefne": "erdnefffne * euepruneff",
    "elb": "ep / de",
    "ep": "fep + nep + rep",
    "erdnefffne": "fne * dffneubne",
    "eu": "dfffneu + ep / ftwepmt + rhp",
    "eupp": "eu / pop",
    "fco2sccs": "fco2sccs2022 + ramp( time, ( ( gfco2sccs - fco2sccs2022 ) / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "fcut": "dfe / fec",
    "fcutlofc": "1 + sfcutlofc * ( (fcut / ekhpy ) - 1 )",
    "fec": "integ( fec, afec -difec, dt, 0 )",
    "fep": "fec * fcut",
    "ffe": "fep / ftwepmt",
    "ffpne": "( fep + nep ) / ep",
    "fne": "fne1980 + ramp( time, ( (fne2022 - fne1980 ) / 42 ), ( 1980 ), ( 2022 )) + ramp( time, ( ( gfne - fne2022 ) / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "ftwepmt": "twepejee / mtpejce",
    "ghmh2": "rep * freh / kwepkgh2",
    "ghmt": "ghmh2 * tpth2",
    "iccsc": "fco2sccs * ( co2nfip +co2ep ) / (1 - fco2sccs )",
    "ieepi": "eepi2022 * 0 + step( time, erocepa2022, 2022)",
    "iiasafep": "uff / mtpejce",
    "iiasarep": "rep / twepejee + rhp / mtpejce",
    "lcep": "rep + nep",
    "lfec": "nlfec * fcutlofc",
    "nc": "with_lookup( time, ([(1980,0), (2100,400)],(1980,75),(2000,310),(2020,310),(2098.9,310) ))",
    "ndswc": "ln(2)+ ln(acswcf / swc1980)",
    "nep": "nc * ncut",
    "nfco2pp": "mnfco2pp * ( 1- exp( - (gdpp / 10)))",
    "opexfeg": "opexfed * fep",
    "opexreg": "opexred * rep",
    "rec": "integ( rec, arec -direc, dt, 0 )",
    "rectec": "ce / tcen",
    "rep": "rec * rcut",
    "rhp": "bem + ghmt",
    "tceg": "( debne * tce / 1000 ) * afmcm",
    "tcen": "tceg + tcfffneug + tgc",
    "tcensgdp": "tcen / gdp",
    "tcfffneug": "( dffneubne * tcfffneu / 1000 ) * afmcm",
    "tco2pt": "2.8*exp(roctco2pt * (time -1980))",
    "tgc": "debne * tc",
    "tppuebee": "with_lookup( gdpp, ([(0,0), (65,20)],(0,0),(10,4),(20,7),(30,9),(50,12),(65,13) ))",
    "tppuffneubee": "with_lookup( gdpp, ([(0,0), (60,5)],(0,0.3),(15,2),(25,3.1),(35,4),(50,5) ))",
    "twepejee": "twhpejce * efpp",
    "uff": "dfffneu + ffe",
    "cbc": "ccsd + nccr",
    "cbc1980": "nsr + nbbm + nbom + nccr",
    "cbsr": "integ( cbsr, csr, dt, 0 )",
    "ccsd": "smoothi( ccsd, tir + nbom, fsrt, tir + nbom, dt )",
    "csr": "( isr - cbsr ) / srat",
    "elti": "smoothi( elti, pi, ieft, inflation_in_1980, dt )",
    "gbc": "tir",
    "isr": "nsr * ( 1 + insr * (pi / it - 1) + unsr * (pu / ut - 1) )",
    "nccr": "0.02 * ( 1 + grcr * ( ogr / 0.03 - 1 ))",
    "pi": "smoothi( pi, ir, iptcb, inflation_in_1980, dt )",
    "pu": "smooth( pu, ur, uptcb, dt )",
    "tgir": "gbc + elti",
    "tir": "cbsr + nbbm",
    "wbc": "ccsd",
    "acy": "( dcyca * ( 1 - fra ) * sqica + cyra * fra ) * co2ely * wely",
    "afsra": "268 - sfu",
    "alfl": "1- exp( - fflr /tfflr)",
    "bala": "integ( bala, crlo, dt, 0 )",
    "bius": "with_lookup( time, ([(1980,0), (2100,200)],(1980,0),(1990,0),(2000,0),(2020,0),(2100,0) ))",
    "cem": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) /78 ), ( 2022 ), ( 2100 )), 1)",
    "cira": "( 1 - crdra )^ndra",
    "co2afl": "fola * (co2aflh / 1000 ) * co2ely * wely",
    "co2aflh": "1.6 * fam",
    "co2eluluc": "co2rfc - co2afl - eco2ara",
    "co2ely": "if_then_else(time>2022, 1 + co2ceacy * ( co2ca / co2c2022 - 1 ), 1)",
    "co2rfc": "(( ogre + crex ) * co2rhfc) / 1000",
    "cofe": "feus * ctf / 1000",
    "cofo": "afgdp * gdp + cra + cofe",
    "cra": "( ecra * raa ) / 1000",
    "crba": "crus / dcs",
    "crbi": "bius * tctb",
    "crde": "(tucerm + ferm + crbi)",
    "crex": "if_then_else(fola > 0, crla * crexr, 0)  * alfl * cem",
    "crexr": "1/200 + cbecle * ( pcb - 1 )",
    "crla": "integ( crla, crex -crlo -urex, dt, 0 )",
    "crlo": "crla * ler",
    "crsu": "acy * crla",
    "crus": "crsu * ( 1 + cwr )",
    "crusp": "crus / pop",
    "csqca": "rocsqca * sqica",
    "csra": "cyra * crla * fra",
    "cwr": "ramp( time, ( gcwr / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "dcs": "crde",
    "dcsca": "dcs - csra",
    "dcyca": "dcsca / ( crla * ( 1 - fra ))",
    "drm": "( ( pop * drmp ) / 1000 ) * ( 1 - fnrm )",
    "drmp": "turmp",
    "ecft": "cra - fcr",
    "ecftsgdp": "ecft / gdp",
    "eco2ara": "raa * co2ara / 1000",
    "ecra": "ecra22 * cira",
    "fam": "if_then_else(time>2022, 1 + ssp2lma * ramp( time, ( (mfam - 1)/78 ), ( 2022 ), ( 2100 )), 1)",
    "fcr": "( afsra / 1000) * raa * (ctf )",
    "feer": "1 + fueler * ( fuca / sfu - 1 )",
    "ferm": "rmf * kckrm",
    "feus": "crla * ( 1 - fra ) * fuca / 1000",
    "ffi": "fofo / ff80",
    "fflr": "max(0, fola / fola_1980 )",
    "fflreogrr": "max(1, 1 + fflreogrrm * ( fflr - tfflr ))",
    "fnrm": "ramp( time, ( gfnrm / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "fofo": "crla * feus",
    "fola": "integ( fola, nfl -crex, dt, 0 )",
    "fpi": "exp(rocfp * ( time - 1980))",
    "fra": "ramp( time, ( gfra / ipp ), ( 2022 ), ( 2020 + ipp ))",
    "fspi": "exp(rocfsp * ( time - 1980)) *if_then_else(time>2022, exp( erocfsp * ( time - 2022)), 1)",
    "fuca": "tfuca / fpi",
    "fup": "( feus / pop ) * 1000",
    "gly": "gly80 + 0 * co2ca - 0 * ow",
    "gly80": "14 *co2ely *wely",
    "grla": "integ( grla, ngl, dt, 0 )",
    "iul": "pop * ulp",
    "ler": "ler80 * feer * lerm",
    "lerm": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) / 78 ), ( 2022 ), ( 2100 )), 1)",
    "lfl": "ogre + crex",
    "locr": "crlo + urex",
    "ndra": "ln( ( raa + egb22 ) / egb22) / 0.693",
    "nfl": "ogre * ( 1 - fcg)",
    "ngl": "ogre * fcg",
    "ogfa": "integ( ogfa,  -nfl -ngl, dt, 0 )",
    "ogre": "ogfa * ogrr * ogrrm",
    "ogrr": "ogrr80 * fflreogrr",
    "ogrrm": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) /78 ), ( 2022 ), ( 2100 )), 1)",
    "pcb": "crba / (1 + drc )",
    "prmgl": "grla * gly / 1000",
    "raa": "crla * fra",
    "rmf": "drm - rmgl",
    "rmgl": "min(drm, prmgl)",
    "rmsp": "(rmgl + rmf * min(1, crba) ) * 1000 / pop",
    "rocsqca": "0 + fuesq * ( fuca / sfu - 1 )",
    "sqica": "integ( sqica, csqca, dt, 0 )",
    "tfa": "ogfa + fola",
    "tfuca": "with_lookup( dcyca, ([(1,0), (10,600)],(1,0),(2,40),(2.5,50),(3,60),(3.5,70),(4.5,100),(6.5,200),(10,600) ))",
    "tuc": "tucp * pop / 1000",
    "tucerm": "( tuc - tufrm ) / fspi",
    "tucermp": "tucerm * 1000 / pop",
    "tucp": "with_lookup( gdpp, ([(0,0), (100,2000)],(0,400),(6.1,680),(8.7,780),(13.9,950),(20,1050),(30,1150),(40,1250),(60,1350),(100,1550) ))",
    "tufrm": "(((turmp / 1000) * pop ) - rmgl ) *kckrm",
    "turmp": "with_lookup( gdpp, ([(0,0), (100,40)],(0,0),(6.1,6),(8.8,8.5),(14,13),(30,27),(40,32),(50,33),(100,25) ))",
    "urex": "max(0, ( iul - urla ) / udt)",
    "urla": "integ( urla, urex, dt, 0 )",
    "wely": "if_then_else(time>2022, 1 + oweacy * ( ow / ow2022 - 1 ), 1)",
    "cddi": "rocddi * deldi",
    "cpi": "prin * ir",
    "del_": "( ( epp / ppu ) / ( deldi / ddi1980 )) * if_then_else ( time > 1984, pnis, 1)",
    "deldi": "integ( deldi, cddi, dt, 0 )",
    "dswi": "1 + inveoswi * (pri / dri - 1 )",
    "epp": "smoothi( epp, tpp, dat, oo1980 * prun * swi1980, dt ) * ( 1 + 0 + pulse_height_1 * pulse( time , 2020,5))",
    "gdp": "outp * ppu",
    "ic": "inv / rs",
    "inv": "integ( inv, outp - del_, dt, 0 )",
    "ir": "inveoin * ( pri / mriwi - 1 )",
    "ni": "sa",
    "outp": "oro * sswi / swi1980",
    "pnis": "##RAND_PINK_NOISE",
    "pri": "smooth( pri, ic / dic, icpt, dt )",
    "prin": "integ( prin, cpi, dt, 0 )",
    "rocddi": "0 + inveoddi * ( pri / sri - 1 )",
    "rs": "smoothi( rs, del_, sat, oo1980 * prun * swi1980, dt )",
    "sa": "del_ * ppu",
    "sswi": "smooth( sswi, dswi, tas, dt )",
    "agiw": "wara * ahw",
    "ahw": "nhw / pftj",
    "ahw1980": "nhw_1980 / pftj80",
    "avwo": "wap * lpr",
    "ceclr": "roceclr * eclr",
    "chwo": "( opwo - wf ) / hfd",
    "cwra": "wara * rocwso",
    "cwso": "wso * rocwso",
    "eclr": "integ( eclr, ceclr, dt, 0 )",
    "enlpr2022": "ramp( time, ( genlpr / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "gdpperocclr": "max( 0, 1 + gdpperocclrm * ( gdpp / gdpp1980 - 1 ))",
    "hfd": "tyld / 3",
    "hwmgdpp": "1 + tenhw * ( gdpp / gdpp1980 - 1 )",
    "ilpr": "nlpr - psw",
    "iweoclr": "1 + wsoeclr * ( wso / wso_1980 - 1 )",
    "lapr": "( outp * ppu ) / laus",
    "laus": "wf * ahw",
    "laus80": "wf_1980 * ahw1980",
    "lpr": "smooth( lpr, ilpr, tellm, dt )",
    "ltewso": "wso * rwer",
    "nhw": "smoothi( nhw, nhw_1980 * hwmgdpp, tahw, nhw_1980, dt )",
    "nlpr": "(nlpr80 * (1 + wsoelpr * ( wso / wso_1980 - 1 ))) + enlpr2022",
    "oclr": "eclr * weoclr",
    "opwo": "( cap / oclr ) * pftj",
    "part": "lpr * ( 1 - pura )",
    "psw": "aur * ( 1 + puelpr * ( pura / aur - 1 ))",
    "pura": "smoothi( pura, ur, upt, unemployment_rate_in_1980, dt )",
    "roceclr": "roceclr80 * gdpperocclr",
    "rocwso": "with_lookup( pura / aur, ([(0,-0.06), (2,0.06)],(0,0.06),(0.5,0.02),(1,0),(1.5,-0.007),(2,-0.01) ))",
    "tct": "tyld /3",
    "unem": "max(0, avwo - wf)",
    "upt": "tyld / 3",
    "ur": "unem / avwo",
    "wap": "a20pa",
    "wara": "integ( wara, cwra -wre, dt, 0 )",
    "wash": "wara / lapr",
    "weoclr": "smooth( weoclr, iweoclr, tct, dt )",
    "wf": "integ( wf, chwo, dt, 0 )",
    "wre": "wara * wrer",
    "wrer": "ir * ( 1 - fic )",
    "wso": "integ( wso, cwso -ltewso, dt, 0 )",
    "cfeta": "cofo + ce",
    "cta": "cfeta",
    "fb15": "1 - ( 1 / ( 1 +exp( - lk * ( gdpp - 14))))",
    "iel": "1 + inelok * ( ineq / 0.5 - 1 )",
    "lk": "nk * iel",
    "pb15": "pop * fb15",
    "pgdpp": "smoothi( pgdpp, gdpp, tegr, gdpp1980 * factor_to_avoid_transient_in_growth_rate, dt )",
    "rggdpp": "(( gdpp - pgdpp ) / pgdpp) / tegr",
    "avca": "ts + fci",
    "cap": "cpis + cpus",
    "capis": "cucpis / ctpis",
    "capus": "cucpus / ctpus",
    "cbcefca": "1 + cbcefra * (cbc / cbc1980 - 1 )",
    "cdpis": "cpis / lcpis",
    "cdpus": "cpus / lcpus",
    "cipis": "max( ( incpis + obsgipis * gdp ) / coca, 0)",
    "cipus": "max( ( gipc + obsgipus * gdp) / coca, 0)",
    "coca": "cc1980 * owecc",
    "cpis": "integ( cpis, capis -cdpis, dt, 0 )",
    "cpus": "integ( cpus, capus -cdpus, dt, 0 )",
    "crr": "capis / cpis",
    "cucpis": "integ( cucpis, cipis -capis, dt, 0 )",
    "cucpus": "integ( cucpus, cipus -capus, dt, 0 )",
    "cucpus1980": "( cappus1980 / lcpus1980 ) * ctpus * emcuc",
    "ecr": "( itfp - etfp ) * crr",
    "ede": "tpp / oov",
    "edefca": "1 + edefra * ( pede / ed1980 - 1 )",
    "edelc": "1 + edelcm * (pede / ed1980 - 1)",
    "etfp": "integ( etfp, ecr, dt, 0 )",
    "facnc": "smooth( facnc, fra1980 * fracamgdppl * ( wsoefca + cbcefca + edefca ) / 3, ipt, dt )",
    "fracamgdppl": "max(fracam, 1 + gdppefraca * ( gdpp / gdpp1980 - 1 ))",
    "fracamgdppt": "with_lookup( gdpp / gdpp1980, ([(0,0), (16,1)],(0,1),(1,1),(2,0.85),(2.1,0.84),(4,0.65),(8,0.55),(16,0.5) ))",
    "incpis": "avca * facnc",
    "isgdp": "( incpis + gipc ) / gdp",
    "lcpis": "( lcpis1980 * owelc ) / edelc",
    "lcpus": "lcpus1980",
    "lcpus1980": "15 * owelc",
    "obsgipis": "if_then_else(time>2022, uspis2022, 0)",
    "obsgipus": "if_then_else(time>2022, 0.01 + uspus2022, 0.01)",
    "ogr": "smoothi( ogr, (oro - oly ) / oly / 1, 1, output_growth_in_1980_to_avoid_transient , dt )",
    "oly": "smoothi( oly, oro, 1, oo1980 / ( 1 + output_growth_in_1980_to_avoid_transient  ), dt )",
    "oov": "oro * ppu",
    "oro": "oo1980 * ( ( cpis + cpus ) / ( cappis1980 + cappus1980) )^kappa * ( laus / laus80 )^lambda_ * ( etfp )",
    "owecc": "if_then_else(time>2022, 1 + oweccm * ( ow / ow2022 - 1 ), 1)",
    "owelc": "if_then_else(time>2022, 1 + owelcm * ( ow / ow2022 - 1 ), 1)",
    "pede": "smoothi( pede, ede, toed, 1, dt )",
    "wsoefca": "1 + wsoefra * (wash / wso_1980 - 1 )",
    "a0020": "integ( a0020, births -pass20, dt, 0 )",
    "a2040": "integ( a2040, pass20 -pass40, dt, 0 )",
    "a20pa": "a2040 + a4060 + a60pl - op",
    "a4060": "integ( a4060, pass40 -pass60, dt, 0 )",
    "a60pl": "integ( a60pl, pass60 -deaths, dt, 0 )",
    "birthr": "births / pop",
    "births": "a2040 * fw * ( of / fp )",
    "cefr": "cmfr * efr",
    "deathr": "deaths / pop",
    "deaths": "deaths_delay_n( k , pass60, le60, dying_in_1980, order )",
    "dnc": "( ( dncm + ( dnc80 - dncm ) * exp( - dncg * ( egdpp - gdpp1980 ))) * (1 + dnca * (egdpp - gdpp1980 )) ) * ( 1 - efr ) * fm",
    "dr": "( a0020 + a60pl ) / ( a2040 + a4060 )",
    "efr": "ramp( time, ( gefr / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "egdpp": "smoothi( egdpp, gdpp, tahi, gdpp1980, dt )",
    "epa": "ramp( time, ( ( gepa - epa_2022 ) / ipp ), ( 2022 ), ( 22022 + ipp ))",
    "fm": "if_then_else(ssp2fa2022f > 0,if_then_else(time>2022, 1 + ramp( time, ( (mfm - 1 ) /78 ), ( 2022 ), ( 2100 )), 1), 1)",
    "gdpp": "gdp / pop",
    "le": "( ( lemax - (lemax - le_1980) * exp( - leg * (egdpp - gdpp1980)) ) * ( 1 + lea * ( egdpp - gdpp1980 )) ) * wele * lem",
    "le60": "le - 60",
    "lem": "if_then_else(ssp2fa2022f > 0,if_then_else(time>2022, 1 + ramp( time, ( (mlem - 1 ) /78 ), ( 2022 ), ( 2100 )), 1), 1)",
    "of": "dnc * fadfs",
    "op": "a60pl * (le - pa ) / ( le - 60 )",
    "pa": "if_then_else(le < le_1980, pa_1980, pa_1980 + leepa * ( le + epa - le_1980 ))",
    "pass20": "pass20_delay_n( k , births, 20, pass_20_1980, order )",
    "pass40": "pass40_delay_n( k , pass20, 20, pass_40_1980, order )",
    "pass60": "pass60_delay_n( k , pass40, 20, pass_60_1980, order )",
    "pgr": "birthr - deathr",
    "pop": "a0020 + a2040 + a4060 + a60pl",
    "pw": "op / a20pa",
    "wele": "if_then_else(time>2022, max(0, 1 + owele * ( ow / ow2022 - 1 )), 1 )",
    "ctfp": "rta * tfpee5ta",
    "drta": "( drota1980 + (if_then_else(time>2022, edrota2022, 0) ) * ( 1 + scrota * ( sc / sc1980 - 1 )))",
    "ectaf2022": "max(0, cta - cta2022)",
    "ectagdp": "ectaf2022 / gdp",
    "gssgdp": "gs / gdp",
    "ipr": "cpus / gpu",
    "irota": "if_then_else(time>2022, max(0, mirota2022 * ( 1 - 1 * ( gdpp / gdptl - 1 )) ), 0)",
    "itfp": "tfpie5ta * owtfp",
    "owtfp": "if_then_else(time>2022, 1 + owetfp * ( ow / ow2022 - 1 ), 1)",
    "plua": "ectagdp * fuata",
    "ppp": "max(0, 1 + iprvpss * ln( ipr / ipr1980 ))",
    "psep": "vpss / pop",
    "psp": "gs / pop",
    "rrotai": "min(1, 1 + iieerota * ( ineqi / 1 - 1) )",
    "rta": "( drta + 0 ) * rrotai + irota",
    "rtfpua": "smooth( rtfpua, plua, ipt + ctpis, dt )",
    "sc": "vpss / gdp",
    "tfpee5ta": "integ( tfpee5ta, ctfp, dt, 0 )",
    "tfpie5ta": "tfpee5ta * ( 1 - rtfpua )",
    "vpss": "gpu * ppp",
    "awbdi": "exp(drdi + ln( wdi / tdi ))",
    "awbgw": "max(mwbgw, min(1, 1 + gweawbgwf * ( pwa / tw - 1)))",
    "awbi": "( 0.5 * awbdi + 0.5 * awbps) * awbin * awbgw * awbp",
    "awbin": "1 + ieawbif * ( ineq / ti - 1 )",
    "awbp": "( 1 + preawbf * ( orp - tpr )) * wbep",
    "awbps": "exp(drps + ln( psp / tps ))",
    "iest": "with_lookup( ineq / ai, ([(0,0), (4,2)],(0,1),(1,1),(2,0) ))",
    "ipp": "if_then_else(eipf>0, eip, rd)",
    "ird": "nrd * strerd * steerd",
    "ist": "psestr * iest",
    "orp": "smoothi( orp, (( awbi - pawbi) / awbi) / awbpd, awbpd, 0, dt )",
    "pawbi": "smoothi( pawbi, awbi, awbpd, awi_in_1980, dt )",
    "psestr": "with_lookup( pssgdp / sps, ([(0,0), (1,2)],(0,0),(1,1) ))",
    "pssgdp": "psp / gdpp",
    "rd": "smooth( rd, ird, tcrd, dt )",
    "ste": "1 + pestf * ( orp - ap )",
    "steerd": "1 + steerdf * ( ste / ste_1980 - 1 )",
    "soc_trust": "smoothi( soc_trust, ist, test, soc_trust_1980, dt )",
    "strerd": "1 + strerdf * ( soc_trust / soc_trust_1980 - 1 )",
    "wbep": "1 + paeawbf * ( lpr / t_part - 1 )"
}