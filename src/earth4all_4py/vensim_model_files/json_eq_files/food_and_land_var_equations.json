{
    "acy": "( dcyca * ( 1 - fra ) * sqica + cyra * fra ) * co2ely * wely",
    "afsra": "268 - sfu",
    "alfl": "1- exp( - fflr /tfflr)",
    "bala": "integ( bala, crlo, dt, 0 )",
    "bius": "with_lookup( time, ([(1980,0), (2100,200)],(1980,0),(1990,0),(2000,0),(2020,0),(2100,0) ))",
    "cem": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) /78 ), ( 2022 ), ( 2100 )), 1)",
    "cira": "( 1 - crdra )^ndra",
    "co2afl": "fola * (co2aflh / 1000 ) * co2ely * wely",
    "co2aflh": "1.6 * fam",
    "co2eluluc": "co2rfc - co2afl - eco2ara",
    "co2ely": "if_then_else(time>2022, 1 + co2ceacy * ( co2ca / co2c2022 - 1 ), 1)",
    "co2rfc": "(( ogre + crex ) * co2rhfc) / 1000",
    "cofe": "feus * ctf / 1000",
    "cofo": "afgdp * gdp + cra + cofe",
    "cra": "( ecra * raa ) / 1000",
    "crba": "crus / dcs",
    "crbi": "bius * tctb",
    "crde": "(tucerm + ferm + crbi)",
    "crex": "if_then_else(fola > 0, crla * crexr, 0)  * alfl * cem",
    "crexr": "1/200 + cbecle * ( pcb - 1 )",
    "crla": "integ( crla, crex -crlo -urex, dt, 0 )",
    "crlo": "crla * ler",
    "crsu": "acy * crla",
    "crus": "crsu * ( 1 + cwr )",
    "crusp": "crus / pop",
    "csqca": "rocsqca * sqica",
    "csra": "cyra * crla * fra",
    "cwr": "ramp( time, ( gcwr / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "dcs": "crde",
    "dcsca": "dcs - csra",
    "dcyca": "dcsca / ( crla * ( 1 - fra ))",
    "drm": "( ( pop * drmp ) / 1000 ) * ( 1 - fnrm )",
    "drmp": "turmp",
    "ecft": "cra - fcr",
    "ecftsgdp": "ecft / gdp",
    "eco2ara": "raa * co2ara / 1000",
    "ecra": "ecra22 * cira",
    "fam": "if_then_else(time>2022, 1 + ssp2lma * ramp( time, ( (mfam - 1)/78 ), ( 2022 ), ( 2100 )), 1)",
    "fcr": "( afsra / 1000) * raa * (ctf )",
    "feer": "1 + fueler * ( fuca / sfu - 1 )",
    "ferm": "rmf * kckrm",
    "feus": "crla * ( 1 - fra ) * fuca / 1000",
    "ffi": "fofo / ff80",
    "fflr": "max(0, fola / fola_1980 )",
    "fflreogrr": "max(1, 1 + fflreogrrm * ( fflr - tfflr ))",
    "fnrm": "ramp( time, ( gfnrm / ipp ), ( 2022 ), ( 2022 + ipp ))",
    "fofo": "crla * feus",
    "fola": "integ( fola, nfl -crex, dt, 0 )",
    "fpi": "exp(rocfp * ( time - 1980))",
    "fra": "ramp( time, ( gfra / ipp ), ( 2022 ), ( 2020 + ipp ))",
    "fspi": "exp(rocfsp * ( time - 1980)) *if_then_else(time>2022, exp( erocfsp * ( time - 2022)), 1)",
    "fuca": "tfuca / fpi",
    "fup": "( feus / pop ) * 1000",
    "gly": "gly80 + 0 * co2ca - 0 * ow",
    "gly80": "14 *co2ely *wely",
    "grla": "integ( grla, ngl, dt, 0 )",
    "iul": "pop * ulp",
    "ler": "ler80 * feer * lerm",
    "lerm": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) / 78 ), ( 2022 ), ( 2100 )), 1)",
    "lfl": "ogre + crex",
    "locr": "crlo + urex",
    "ndra": "ln( ( raa + egb22 ) / egb22) / 0.693",
    "nfl": "ogre * ( 1 - fcg)",
    "ngl": "ogre * fcg",
    "ogfa": "integ( ogfa,  -nfl -ngl, dt, 0 )",
    "ogre": "ogfa * ogrr * ogrrm",
    "ogrr": "ogrr80 * fflreogrr",
    "ogrrm": "if_then_else(time>2022, 1 - ssp2lma * ramp( time, ( (1 - 0 ) /78 ), ( 2022 ), ( 2100 )), 1)",
    "pcb": "crba / (1 + drc )",
    "prmgl": "grla * gly / 1000",
    "raa": "crla * fra",
    "rmf": "drm - rmgl",
    "rmgl": "min(drm, prmgl)",
    "rmsp": "(rmgl + rmf * min(1, crba) ) * 1000 / pop",
    "rocsqca": "0 + fuesq * ( fuca / sfu - 1 )",
    "sqica": "integ( sqica, csqca, dt, 0 )",
    "tfa": "ogfa + fola",
    "tfuca": "with_lookup( dcyca, ([(1,0), (10,600)],(1,0),(2,40),(2.5,50),(3,60),(3.5,70),(4.5,100),(6.5,200),(10,600) ))",
    "tuc": "tucp * pop / 1000",
    "tucerm": "( tuc - tufrm ) / fspi",
    "tucermp": "tucerm * 1000 / pop",
    "tucp": "with_lookup( gdpp, ([(0,0), (100,2000)],(0,400),(6.1,680),(8.7,780),(13.9,950),(20,1050),(30,1150),(40,1250),(60,1350),(100,1550) ))",
    "tufrm": "(((turmp / 1000) * pop ) - rmgl ) *kckrm",
    "turmp": "with_lookup( gdpp, ([(0,0), (100,40)],(0,0),(6.1,6),(8.8,8.5),(14,13),(30,27),(40,32),(50,33),(100,25) ))",
    "urex": "max(0, ( iul - urla ) / udt)",
    "urla": "integ( urla, urex, dt, 0 )",
    "wely": "if_then_else(time>2022, 1 + oweacy * ( ow / ow2022 - 1 ), 1)"
}